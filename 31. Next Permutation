class Solution:
    def nextPermutation(self, A):
        n = len(A)
        pivot = -1
        # 1st step: find pivot
        for i in range(n - 2, -1, -1):
            if A[i] < A[i + 1]:
                pivot = i
                break
        # if no pivot found, reverse entire list
        if pivot == -1:
            A.reverse()
            return A
        # 2nd step: find next larger element from the right
        for i in range(n - 1, pivot, -1):
            if A[i] > A[pivot]:
                A[i], A[pivot] = A[pivot], A[i]
                break
        # 3rd step: reverse the suffix (pivot+1 to n-1)
        i, j = pivot + 1, n - 1
        while i < j:
            A[i], A[j] = A[j], A[i]
            i += 1
            j -= 1
        return A
